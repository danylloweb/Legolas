version: "3.7"
services:
    api2:
        build:
            context: /.setup/php7.2
            dockerfile: Dockerfile
        container_name: api2
        restart: always
        working_dir: /var/www/html
        ports:
            - 8001:80
        volumes:
            - ../api2/:/var/www/html
        networks:
            - legolas

    worker:
        build:
            context: /.setup/php7.4
            dockerfile: Dockerfile
        container_name: worker
        restart: always
        working_dir: /var/www/html
        volumes:
            - ../worker/:/var/www/html
        ports:
            - 8002:80
        networks:
            - legolas

    onboarding:
        build:
            context: /.setup/php7.4
            dockerfile: Dockerfile
        container_name: onboarding
        restart: always
        working_dir: /var/www/html
        volumes:
            - ../onboarding/:/var/www/html
        networks:
            - legolas

    monolito:
        image: gcr.io/teladoc-main-dev/monolito:develop
        container_name: monolito
        restart: unless-stopped
        ports:
          - 9000:80
        volumes:
            - ../monolito/:/var/www
        networks:
            - legolas

    asset:
        image: gcr.io/teladoc-main-dev/asset:develop
        volumes:
            - ../asset:/var/www
            - ../asset/.env.example:/var/www/.env
        links:
            - redis
            - postgres
            - mongo
        networks:
            - legolas

    redis:
        image: redis:latest
        container_name: redis_legolas
        networks:
            - legolas

    queue:
        image: gcr.io/teladoc-main-dev/queue:develop
        container_name: queue
        volumes:
            - ../queue:/var/www
            - ../queue/.env.example:/var/www/.env
        links:
            - redis
            - postgres
            - mongo
        networks:
            - legolas

    apigateway:
        restart: unless-stopped
        container_name: apigateway
        build:
            context: ../apigateway
            dockerfile: Dockerfile
        volumes:
            - ../apigateway/:/app
        ports:
            - 3000:3000
        networks:
            - legolas

    nomad:
        image: gcr.io/teladoc-main-dev/nomad:develop
        volumes:
            - ../nomad/:/var/www
            - ../nomad/.env:/var/www/.env
            - ../nomad/legacy/.env:/var/www/legacy/.env
        links:
            - redis
            - postgres
            - mongo
        depends_on:
            - postgres
        networks:
            - legolas

    sauron:
        restart: unless-stopped
        build:
            context: ../sauron
            dockerfile: Dockerfile
        volumes:
            - ../sauron/:/app
        ports:
            - 4200:3000
        networks:
            - legolas

    postgres:
        image: postgres:11.2
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: teladoc
            POSTGRES_PASSWORD: teladoc
            POSTGRES_DB: teladoc
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres:/var/lib/postgresql/data/pgdata
        networks:
            - legolas

    vanellope:
        image: gcr.io/teladoc-main-dev/vanellope:develop
        restart: unless-stopped
        volumes:
            - ../vanellope/:/var/www
            - ../docker/vanellope/nginx/:/etc/nginx/conf.d/
        ports:
            - 9092:80
        networks:
            - legolas

    mongo:
        image: mongo
        container_name: teladoc_mongo
        restart: always
        volumes:
            - ./data/db:/data/db
        networks:
            - legolas

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        links:
            - mongo
        networks:
            - legolas

    inss:
        restart: unless-stopped
        build:
            context: ../inss
            dockerfile: Dockerfile
        volumes:
            - ../inss/:/app
        ports:
            - 3333:3000
        networks:
            - legolas

    payment:
        restart: unless-stopped
        build:
            context: ../payment
            dockerfile: Dockerfile
        volumes:
            - ../payment/:/app
        ports:
            - 3004:3000
        networks:
            - legolas

    redis-commander:
        image: rediscommander/redis-commander
        environment:
            - REDIS_HOSTS=redis:redis:6379
        ports:
            - 8082:8081
        depends_on:
            - redis
        networks:
            - legolas

    redissocket:
        image: redis:alpine
        container_name: redissocket
        volumes:
            - redissocket:/data
        networks:
            - legolas

    portainer:
        image: portainer/portainer
        container_name: portainer_teladoc
        command: -H unix:///var/run/docker.sock
        restart: always
        ports:
            - 9002:9000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /data/portainer_data:/data
        networks:
            - legolas

    phppgadmin:
        restart: always
        image: dockage/phppgadmin:latest
        ports:
            - "8083:80"
        environment:
            - PHP_PG_ADMIN_SERVER_DESC=PostgreSQL
            - PHP_PG_ADMIN_SERVER_HOST=postgres
            - PHP_PG_ADMIN_SERVER_PORT=5432
            - PHP_PG_ADMIN_SERVER_SSL_MODE=allow
            - PHP_PG_ADMIN_SERVER_DEFAULT_DB=template1
            - PHP_PG_ADMIN_SERVER_PG_DUMP_PATH=/usr/bin/pg_dump
            - PHP_PG_ADMIN_SERVER_PG_DUMPALL_PATH=/usr/bin/pg_dumpall
            - PHP_PG_ADMIN_DEFAULT_LANG=auto
            - PHP_PG_ADMIN_AUTO_COMPLETE=default on
            - PHP_PG_ADMIN_EXTRA_LOGIN_SECURITY=false
            - PHP_PG_ADMIN_OWNED_ONLY=false
            - PHP_PG_ADMIN_SHOW_COMMENTS=true
            - PHP_PG_ADMIN_SHOW_ADVANCED=false
            - PHP_PG_ADMIN_SHOW_SYSTEM=false
            - PHP_PG_ADMIN_MIN_PASSWORD_LENGTH=1
            - PHP_PG_ADMIN_LEFT_WIDTH=200
            - PHP_PG_ADMIN_THEME=default
            - PHP_PG_ADMIN_SHOW_OIDS=false
            - PHP_PG_ADMIN_MAX_ROWS=30
            - PHP_PG_ADMIN_MAX_CHARS=50
            - PHP_PG_ADMIN_USE_XHTML_STRICT=false
            - PHP_PG_ADMIN_HELP_BASE=http://www.postgresql.org/docs/%s/interactive/
            - PHP_PG_ADMIN_AJAX_REFRESH=3
        networks:
            - legolas

volumes:
    redis: null
    redissocket: null
    postgres: null
    pgadmin: null
    portainer_data: null

networks:
    legolas:
        driver: bridge
